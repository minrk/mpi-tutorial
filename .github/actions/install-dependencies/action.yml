name: Install dependencies

inputs:
  python-version:
    description: Python version to install
    required: true
    type: string
    default: "3.10"

runs:
  using: composite
  steps:
    # cache ref https://github.com/conda-incubator/setup-miniconda#caching-packages

    # caching conda packages saves download time, but not unpack / solve
    # - name: Cache conda packages
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/conda_pkgs_dir
    #     key:
    #       conda-pkgs-${{ inputs.python-version }}-${{ hashFiles('.github/actions/install-dependencies/*') }}-${{ hashFiles('environment.yml') }}

    - name: Setup conda-forge
      uses: conda-incubator/setup-miniconda@v2
      with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: mpi-tutorial
          python-version: ${{ inputs.python-version }}
          use-mamba: true
          # uncomment to install env in one go (without caching)
          # environment-file: environment.yml
          # needed for caching
          use-only-tar-bz2: true

    - name: Get Date
      id: get-date
      run: echo "today=$(/bin/date -u '+%Y%m%d')" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Cache conda env
      uses: actions/cache@v3
      id: cache-env
      with:
        path: ${{ env.CONDA }}/envs/mpi-tutorial
        key:
          conda-env-${{ steps.get-date.outputs.today }}-${{ inputs.python-version }}-${{ hashFiles('environment.yml') }}

    - name: Update environment
      if: steps.cache-env.outputs.cache-hit != 'true'
      run:
          mamba env update -n mpi-tutorial -f environment.yml
      shell: bash -el {0}
